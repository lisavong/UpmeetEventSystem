{"ast":null,"code":"import { forkJoin, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/repository.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/event-details\", a1];\n};\nfunction FavoritesComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"a\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const fave_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Favorites ID: \", fave_r5.id, \" | \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, fave_r5.eventID));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fave_r5.name, \"\");\n  }\n}\nfunction FavoritesComponent_div_10_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"You have no favorite events. Go back and add some!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FavoritesComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FavoritesComponent_div_10_div_1_Template, 5, 5, \"div\", 5);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"form\", 0, 6);\n    i0.ɵɵlistener(\"ngSubmit\", function FavoritesComponent_div_10_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const _r3 = i0.ɵɵreference(4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteFavoriteByID(_r3));\n    });\n    i0.ɵɵelementStart(5, \"label\", 7);\n    i0.ɵɵtext(6, \"Enter ID You Want To Remove:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 8);\n    i0.ɵɵelementStart(8, \"button\");\n    i0.ɵɵtext(9, \"Remove From Favorites\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, FavoritesComponent_div_10_div_10_Template, 3, 0, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.favorites);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.noFavorites);\n  }\n}\nexport class FavoritesComponent {\n  constructor(repositoryService) {\n    this.repositoryService = repositoryService;\n    this.showFavorites = false;\n    this.noFavorites = false;\n    this.favoriteText = \"\";\n    this.activeUserID = -1;\n    this.deleteID = -1;\n    this.id = -1;\n    this.date = \"\";\n    this.name = \"\";\n    this.description = \"\";\n    this.price = \"\";\n    this.location = \"\";\n  }\n  getUserID(form) {\n    this.activeUserID = form.form.value.activeUserID;\n    form.resetForm();\n  }\n  toggleFavorites(activeUserID) {\n    forkJoin({\n      events: this.repositoryService.getEvents(),\n      favorites: this.repositoryService.getFavoritesByUserID(this.activeUserID)\n    }).pipe(map(response => {\n      const events = response.events;\n      const favorites = response.favorites;\n      const result = [];\n      favorites.map(favorites => {\n        result.push({\n          ...favorites,\n          ...events.find(events => events.eventID === favorites.eventID)\n        });\n      });\n      console.log(\"result \", result);\n      return result;\n    })).subscribe(response => {\n      this.favorites = response;\n      this.showFavorites = true;\n    });\n  }\n  deleteFavoriteByID(form) {\n    let deletedFavorite = {\n      id: form.form.value.deleteID,\n      userID: -1,\n      eventID: -1\n    };\n    this.repositoryService.deleteFavoriteByID(deletedFavorite.id).subscribe(() => {\n      this.toggleFavorites(this.activeUserID);\n    });\n    form.resetForm();\n  }\n}\nFavoritesComponent.ɵfac = function FavoritesComponent_Factory(t) {\n  return new (t || FavoritesComponent)(i0.ɵɵdirectiveInject(i1.RepositoryService));\n};\nFavoritesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FavoritesComponent,\n  selectors: [[\"app-favorites\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[3, \"ngSubmit\"], [\"userIDForm\", \"ngForm\"], [\"for\", \"activeUserID\"], [\"name\", \"activeUserID\", \"id\", \"activeUserID\", \"ngModel\", \"\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"deleteForm\", \"ngForm\"], [\"for\", \"deleteID\"], [\"name\", \"deleteID\", \"id\", \"deleteID\", \"ngModel\", \"\"], [\"routerLinkActive\", \"active\", 3, \"routerLink\"]],\n  template: function FavoritesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r9 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Your Favorite Events\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function FavoritesComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r0 = i0.ɵɵreference(4);\n        ctx.getUserID(_r0);\n        return i0.ɵɵresetView(ctx.toggleFavorites(ctx.activeUserID));\n      });\n      i0.ɵɵelementStart(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Enter user ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementStart(8, \"button\");\n      i0.ɵɵtext(9, \"Show Favorites\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(10, FavoritesComponent_div_10_Template, 11, 2, \"div\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.showFavorites);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i3.RouterLinkActive, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAKA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,MAAM;;;;;;;;;;;ICMhCC,2BAAsD;IAC3CA,YAA4B;IAAAA,4BAA6E;IAACA,YAAa;IAAAA,iBAAI;;;;IAA3HA,eAA4B;IAA5BA,2DAA4B;IAAGA,eAA+C;IAA/CA,wEAA+C;IAA4BA,eAAa;IAAbA,4CAAa;;;;;IASlIA,2BAAyB;IACtBA,kEAAkD;IAAAA,iBAAI;;;;;;IAZ7DA,2BAA2B;IACvBA,0EAGM;IACNA,qBAAI;IACJA,kCAAuE;IAA5CA;MAAAA;MAAA;MAAA;MAAA,OAAYA,6CAA8B;IAAA,EAAC;IAClEA,gCAAsB;IAAAA,4CAA4B;IAAAA,iBAAQ;IAC1DA,2BAA+C;IAC/CA,8BAAQ;IAAAA,qCAAqB;IAAAA,iBAAS;IAE1CA,4EAEM;IACVA,iBAAM;;;;IAboBA,eAAc;IAAdA,0CAAc;IAU9BA,eAAiB;IAAjBA,yCAAiB;;;ADT3B,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAJrC,kBAAa,GAAY,KAAK;IAC9B,gBAAW,GAAY,KAAK;IAC5B,iBAAY,GAAW,EAAE;IAKzB,iBAAY,GAAW,CAAC,CAAC;IACzB,aAAQ,GAAU,CAAC,CAAC;IACpB,OAAE,GAAU,CAAC,CAAC;IAGd,SAAI,GAAU,EAAE;IAChB,SAAI,GAAW,EAAE;IACjB,gBAAW,GAAW,EAAE;IACxB,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAU,EAAE;EAZuC;EAc3DC,SAAS,CAACC,IAAY;IACrB,IAAI,CAACC,YAAY,GAAGD,IAAI,CAACA,IAAI,CAACE,KAAK,CAACD,YAAY;IAChDD,IAAI,CAACG,SAAS,EAAE;EACjB;EAEAC,eAAe,CAACH,YAAoB;IAClCR,QAAQ,CAAC;MACPY,MAAM,EAAE,IAAI,CAACP,iBAAiB,CAACQ,SAAS,EAAE;MAC1CC,SAAS,EAAE,IAAI,CAACT,iBAAiB,CAACU,oBAAoB,CAAC,IAAI,CAACP,YAAY;KACzE,CAAC,CACDQ,IAAI,CACHf,GAAG,CAACgB,QAAQ,IAAG;MACb,MAAML,MAAM,GAAeK,QAAQ,CAACL,MAAM;MAC1C,MAAME,SAAS,GAAeG,QAAQ,CAACH,SAAS;MAChD,MAAMI,MAAM,GAAU,EAAE;MACxBJ,SAAS,CAACb,GAAG,CAAEa,SAAc,IAAI;QAC/BI,MAAM,CAACC,IAAI,CAAC;UACV,GAAGL,SAAS;UACZ,GAAGF,MAAM,CAACQ,IAAI,CAAER,MAAW,IAAKA,MAAM,CAACS,OAAO,KAAKP,SAAS,CAACO,OAAO;SAAE,CAAC;MAC3E,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEL,MAAM,CAAC;MAC9B,OAAOA,MAAM;IACf,CAAC,CAAC,CACH,CACAM,SAAS,CAAEP,QAAQ,IAAI;MACtB,IAAI,CAACH,SAAS,GAAGG,QAAQ;MACzB,IAAI,CAACQ,aAAa,GAAG,IAAI;IAC3B,CAAC,CAAC;EACF;EAGFC,kBAAkB,CAACnB,IAAY;IAE7B,IAAIoB,eAAe,GAAe;MAChCC,EAAE,EAAErB,IAAI,CAACA,IAAI,CAACE,KAAK,CAACoB,QAAQ;MAC5BC,MAAM,EAAE,CAAC,CAAC;MACVT,OAAO,EAAE,CAAC;KACV;IAEF,IAAI,CAAChB,iBAAiB,CAACqB,kBAAkB,CAACC,eAAe,CAACC,EAAE,CAAC,CAACJ,SAAS,CACrE,MAAK;MACH,IAAI,CAACb,eAAe,CAAC,IAAI,CAACH,YAAY,CAAC;IACzC,CAAC,CACF;IACDD,IAAI,CAACG,SAAS,EAAE;EAClB;;AAlEWP,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCZ/BjC,0BAAI;MAAAA,oCAAoB;MAAAA,iBAAK;MAE7BA,2BAAK;MAC0BA;QAAAA;QAAA;QAAYkC,kBAAqB;QAAA,OAAElC,oDAA6B;MAAA,EAAC;MACxFA,gCAA0B;MAAAA,8BAAc;MAAAA,iBAAQ;MACjDA,2BAAuD;MACvDA,8BAAQ;MAAAA,8BAAc;MAAAA,iBAAS;MAItCA,sEAcM;;;MAdAA,gBAAmB;MAAnBA,wCAAmB","names":["forkJoin","map","i0","FavoritesComponent","constructor","repositoryService","getUserID","form","activeUserID","value","resetForm","toggleFavorites","events","getEvents","favorites","getFavoritesByUserID","pipe","response","result","push","find","eventID","console","log","subscribe","showFavorites","deleteFavoriteByID","deletedFavorite","id","deleteID","userID","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\rizzo\\Desktop\\repos\\upmeeteventsystem\\src\\app\\favorites\\favorites.component.ts","C:\\Users\\rizzo\\Desktop\\repos\\upmeeteventsystem\\src\\app\\favorites\\favorites.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { IFavorites } from 'app/interfaces/favorites';\r\nimport { RepositoryService } from 'app/repository.service';\r\nimport { EventComponent } from 'app/event/event.component';\r\nimport { forkJoin, map } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-favorites',\r\n  templateUrl: './favorites.component.html',\r\n  styleUrls: ['./favorites.component.css']\r\n})\r\nexport class FavoritesComponent {\r\n\r\n  showFavorites: boolean = false;\r\n  noFavorites: boolean = false;\r\n  favoriteText: string = \"\";\r\n\r\n  constructor(private repositoryService: RepositoryService) {}\r\n\r\n  favorites: any;\r\n  activeUserID: number = -1;\r\n  deleteID: number =-1;\r\n  id: number =-1;\r\n\r\n  events: any;\r\n  date: string =\"\";\r\n  name: string = \"\";\r\n  description: string = \"\";\r\n  price: string = \"\";\r\n  location: string= \"\";\r\n\r\n  getUserID(form: NgForm) {\r\n   this.activeUserID = form.form.value.activeUserID;\r\n   form.resetForm();\r\n  }\r\n\r\n  toggleFavorites(activeUserID: number) {\r\n    forkJoin({\r\n      events: this.repositoryService.getEvents(),\r\n      favorites: this.repositoryService.getFavoritesByUserID(this.activeUserID)\r\n    })\r\n    .pipe(\r\n      map(response => {\r\n        const events = <Array<any>>response.events;\r\n        const favorites = <Array<any>>response.favorites;\r\n        const result: any[] = [];\r\n        favorites.map((favorites: any) => {\r\n          result.push({\r\n            ...favorites, \r\n            ...events.find((events: any) => events.eventID === favorites.eventID)})\r\n        });\r\n  \r\n        console.log(\"result \", result)\r\n        return result;\r\n      })\r\n    )\r\n    .subscribe((response) => {\r\n      this.favorites = response;\r\n      this.showFavorites = true;\r\n    });\r\n    }\r\n\r\n    \r\n  deleteFavoriteByID(form: NgForm) {\r\n\r\n    let deletedFavorite: IFavorites = {\r\n      id: form.form.value.deleteID,\r\n      userID: -1,\r\n      eventID: -1\r\n     };\r\n\r\n    this.repositoryService.deleteFavoriteByID(deletedFavorite.id).subscribe(\r\n      () => {\r\n        this.toggleFavorites(this.activeUserID)\r\n      }\r\n    );\r\n    form.resetForm();\r\n  }\r\n}\r\n","<h1>Your Favorite Events</h1>\r\n\r\n<div>\r\n    <form #userIDForm=\"ngForm\" (ngSubmit)=\"getUserID(userIDForm); toggleFavorites(activeUserID)\">\r\n        <label for=\"activeUserID\">Enter user ID:</label>\r\n       <input name=\"activeUserID\" id=\"activeUserID\" ngModel />\r\n       <button>Show Favorites</button>\r\n    </form>\r\n</div>\r\n\r\n<div *ngIf=\"showFavorites\">\r\n    <div *ngFor=\"let fave of favorites, index as eventID\">\r\n        <span> Favorites ID: {{fave.id}} | <a [routerLink]=\"['/event-details', fave.eventID]\" routerLinkActive=\"active\"> {{fave.name}}</a>\r\n         </span>\r\n    </div>\r\n    <br>\r\n    <form #deleteForm=\"ngForm\" (ngSubmit)=\"deleteFavoriteByID(deleteForm)\">\r\n        <label for=\"deleteID\">Enter ID You Want To Remove:</label>\r\n        <input name=\"deleteID\" id=\"deleteID\" ngModel />\r\n        <button>Remove From Favorites</button>\r\n    </form>\r\n    <div *ngIf=\"noFavorites\">\r\n    <p>You have no favorite events. Go back and add some!</p>\r\n    </div>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}